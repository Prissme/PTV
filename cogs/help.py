import discord
from discord.ext import commands
from discord import app_commands
import logging

from config import PREFIX, Colors, Emojis, TRANSFER_TAX_RATE, SHOP_TAX_RATE

logger = logging.getLogger(__name__)

class Help(commands.Cog):
    """Aide compl√®te pour toutes les commandes du bot avec support dual (/ et e!) et banque publique"""
    
    def __init__(self, bot):
        self.bot = bot
    
    async def cog_load(self):
        """Appel√© quand le cog est charg√©"""
        logger.info("‚úÖ Cog Help initialis√© avec support commandes duales et banque publique")

    @commands.command(name='help', aliases=['h', 'aide'])
    async def help_cmd(self, ctx):
        """e!help - Affiche l'aide compl√®te du bot"""
        try:
            embed = discord.Embed(
                title="ü§ñ Bot √âconomie - Aide Compl√®te",
                description="**Toutes les commandes sont disponibles en 2 formats :**\n"
                           f"‚Ä¢ **Slash Commands:** `/commande` (recommand√©)\n"
                           f"‚Ä¢ **Pr√©fixe:** `{PREFIX}commande` (classique)\n\n"
                           "**Commandes disponibles :**",
                color=Colors.INFO
            )

            # Commandes √âconomie avec taxes
            embed.add_field(
                name=f"{Emojis.MONEY} **√âconomie**",
                value=f"‚Ä¢ `/balance [@user]` ou `{PREFIX}balance [@user]` - Voir le solde\n"
                      f"‚Ä¢ `/give <@user> <montant>` ou `{PREFIX}give <@user> <montant>` - Donner des PrissBucks\n"
                      f"   {Emojis.TAX} *Taxe {TRANSFER_TAX_RATE*100:.0f}% appliqu√©e sur les transferts*\n"
                      f"‚Ä¢ `/daily` ou `{PREFIX}daily` - R√©compense quotidienne 24h\n"
                      f"‚Ä¢ `/addpb <@user> <montant>` ou `{PREFIX}addpb` - [ADMIN] Ajouter des PrissBucks",
                inline=False
            )
            
            # Commandes Shop avec taxes
            embed.add_field(
                name=f"{Emojis.SHOP} **Boutique**",
                value=f"‚Ä¢ `/shop [page]` ou `{PREFIX}shop [page]` - Voir la boutique\n"
                      f"‚Ä¢ `/buy <item_id>` ou `{PREFIX}buy <item_id>` - Acheter un item\n"
                      f"   {Emojis.TAX} *Taxe {SHOP_TAX_RATE*100:.0f}% appliqu√©e sur tous les achats*\n"
                      f"‚Ä¢ `/inventory [@user]` ou `{PREFIX}inventory [@user]` - Voir l'inventaire\n"
                      f"‚Ä¢ `/shopstats` ou `{PREFIX}shopstats` - [ADMIN] Statistiques boutique",
                inline=False
            )
            
            # NOUVEAU: Commandes Banque Publique
            embed.add_field(
                name=f"{Emojis.PUBLIC_BANK} **Banque Publique - NOUVEAU !**",
                value=f"‚Ä¢ `/publicbank` ou `{PREFIX}publicbank` - Voir les fonds publics\n"
                      f"‚Ä¢ `/withdraw_public <montant>` ou `{PREFIX}withdraw_public` - Retirer des fonds\n"
                      f"‚Ä¢ `{PREFIX}public_stats` - Statistiques d√©taill√©es\n"
                      f"üî• **Aliment√©e par les pertes casino !** üî•",
                inline=False
            )
            
            # Commandes Classement
            embed.add_field(
                name="üèÜ **Classements**",
                value=f"‚Ä¢ `/leaderboard [limite]` ou `{PREFIX}leaderboard [limite]` - Top des plus riches\n"
                      f"‚Ä¢ `/rank [@user]` ou `{PREFIX}rank [@user]` - Position dans le classement\n"
                      f"‚Ä¢ `/richest` ou `{PREFIX}richest` - Utilisateur le plus riche\n"
                      f"‚Ä¢ `/poorest` ou `{PREFIX}poorest` - Utilisateurs les moins riches",
                inline=False
            )
            
            # Mini-jeux MODIFI√âS
            embed.add_field(
                name="üéÆ **Mini-jeux Solidaires**",
                value=f"‚Ä¢ `/ppc <@adversaire> <mise>` - Pierre-Papier-Ciseaux\n"
                      f"‚Ä¢ `/roulette <pari> <mise>` ou `{PREFIX}roulette` - Roulette casino\n"
                      f"‚Ä¢ `{PREFIX}voler <@utilisateur>` - Tenter de voler (risqu√© !)\n"
                      f"‚Ä¢ `{PREFIX}ppc_stats [@user]` - Statistiques PPC\n"
                      f"üèõÔ∏è **Les pertes alimentent la banque publique !**",
                inline=False
            )
            
            # Utilitaires
            embed.add_field(
                name="‚ÑπÔ∏è **Utilitaires**",
                value=f"‚Ä¢ `/help` ou `{PREFIX}help` - Cette aide\n"
                      f"‚Ä¢ `/ping` ou `{PREFIX}ping` - Latence du bot et infos syst√®me\n"
                      f"‚Ä¢ `{PREFIX}taxes` - Informations d√©taill√©es sur les taxes\n"
                      f"‚Ä¢ `/transactions` ou `{PREFIX}transactions` - Ton historique",
                inline=False
            )

            # Commandes Admin
            embed.add_field(
                name="üëÆ‚Äç‚ôÇÔ∏è **Administration**",
                value=f"‚Ä¢ `/additem <prix> <@role> <nom>` ou `{PREFIX}additem` - Ajouter un item au shop\n"
                      f"‚Ä¢ `/removeitem <item_id>` ou `{PREFIX}removeitem` - D√©sactiver un item\n"
                      f"‚Ä¢ Commandes owner: `{PREFIX}reload`, `{PREFIX}sync`, `{PREFIX}cogs`",
                inline=False
            )

            # Section sp√©ciale sur le syst√®me de taxes
            embed.add_field(
                name=f"{Emojis.TAX} **Syst√®me de Taxes**",
                value=f"‚Ä¢ **Transferts:** {TRANSFER_TAX_RATE*100:.0f}% de taxe sur les transferts entre utilisateurs\n"
                      f"‚Ä¢ **Boutique:** {SHOP_TAX_RATE*100:.0f}% de taxe sur tous les achats\n"
                      f"‚Ä¢ **Utilit√©:** Les taxes financent le d√©veloppement du serveur\n"
                      f"‚Ä¢ **Exemples:** Give 100 ‚Üí re√ßoit {100-int(100*TRANSFER_TAX_RATE)}, Shop 100 ‚Üí co√ªte {100+int(100*SHOP_TAX_RATE)}",
                inline=False
            )

            # NOUVEAU: Section banque publique
            embed.add_field(
                name=f"üèõÔ∏è **R√âVOLUTION : Banque Publique**",
                value="üî• **NOUVELLE FONCTIONNALIT√â R√âVOLUTIONNAIRE !** üî•\n"
                      "‚Ä¢ **Aliment√©e automatiquement** par les pertes casino\n"
                      "‚Ä¢ **Accessible √† TOUS** les joueurs du serveur\n"
                      "‚Ä¢ **Fini les pertes inutiles** - tout va vers la communaut√©\n"
                      "‚Ä¢ **Syst√®me solidaire** - nous perdons ensemble, nous gagnons ensemble\n"
                      "‚Ä¢ **Roulette √©galit√©/PPC √©galit√©** = Banque publique\n"
                      "‚Ä¢ **Utilise `/publicbank` pour voir les fonds disponibles !**",
                inline=False
            )

            # D√©tails sur les syst√®mes MODIFI√âS
            embed.add_field(
                name="üí° **D√©tails importants**",
                value="‚Ä¢ **Daily:** 50-150 PrissBucks + 10% chance bonus (50-200)\n"
                      "‚Ä¢ **PPC:** Jeu avec mise, √©galit√© = banque publique !\n"
                      "‚Ä¢ **Roulette:** Casino avec pertes vers banque publique !\n"
                      "‚Ä¢ **Vol:** 70% r√©ussite (vole 30%), 30% √©chec (perd 40%)\n"
                      "‚Ä¢ **Shop:** R√¥les automatiquement attribu√©s apr√®s achat\n"
                      "‚Ä¢ **Cooldowns:** Daily 24h, Give 5s, Buy 3s, Vol 0.5h, Roulette 3s\n"
                      "‚Ä¢ **Messages:** +1 PrissBuck par message (CD: 20s)\n"
                      "‚Ä¢ üèõÔ∏è **BANQUE PUBLIQUE:** Retire jusqu'√† 1000 PB/30min !",
                inline=False
            )

            # Footer avec stats
            guild_count = len(self.bot.guilds) if self.bot.guilds else 1
            slash_count = len(self.bot.tree.get_commands())
            embed.set_footer(
                text=f"Pr√©fixe: {PREFIX} ‚Ä¢ Slash: / ‚Ä¢ {guild_count} serveur(s) ‚Ä¢ {slash_count} slash command(s) ‚Ä¢ Taxes: {TRANSFER_TAX_RATE*100:.0f}%/{SHOP_TAX_RATE*100:.0f}% ‚Ä¢ üèõÔ∏è BANQUE PUBLIQUE ACTIVE"
            )
            embed.set_thumbnail(url=self.bot.user.display_avatar.url)
            
            await ctx.send(embed=embed)
                
        except Exception as e:
            logger.error(f"Erreur help: {e}")
            await ctx.send(f"**‚ùå Erreur dans l'aide**\n"
                          f"Commandes de base : `/balance`, `/daily`, `/shop`, `/give`, `/buy`, `/ppc`, `/publicbank`\n"
                          f"Ou avec pr√©fixe : `{PREFIX}balance`, `{PREFIX}daily`, etc.\n"
                          f"**Taxes:** {TRANSFER_TAX_RATE*100:.0f}% sur transferts, {SHOP_TAX_RATE*100:.0f}% sur achats\n"
                          f"üî• **NOUVEAU:** Banque publique avec `/publicbank` !")

    @app_commands.command(name="help", description="Affiche l'aide compl√®te du bot avec la nouvelle banque publique")
    async def help_slash(self, interaction: discord.Interaction):
        """/help - Affiche l'aide compl√®te"""
        await interaction.response.defer()
        
        try:
            embed = discord.Embed(
                title="ü§ñ Bot √âconomie - Aide Compl√®te",
                description="**Toutes les commandes sont disponibles en 2 formats :**\n"
                           f"‚Ä¢ **Slash Commands:** `/commande` (recommand√©)\n"
                           f"‚Ä¢ **Pr√©fixe:** `{PREFIX}commande` (classique)\n\n"
                           "**Commandes disponibles :**",
                color=Colors.INFO
            )

            # R√©pliquer le m√™me contenu que la version prefix
            # [Le contenu est identique √† la version prefix ci-dessus, donc je ne le recopie pas enti√®rement]
            
            # Commandes √âconomie avec taxes
            embed.add_field(
                name=f"{Emojis.MONEY} **√âconomie**",
                value=f"‚Ä¢ `/balance [@user]` ou `{PREFIX}balance [@user]` - Voir le solde\n"
                      f"‚Ä¢ `/give <@user> <montant>` ou `{PREFIX}give <@user> <montant>` - Donner des PrissBucks\n"
                      f"   {Emojis.TAX} *Taxe {TRANSFER_TAX_RATE*100:.0f}% appliqu√©e sur les transferts*\n"
                      f"‚Ä¢ `/daily` ou `{PREFIX}daily` - R√©compense quotidienne 24h\n"
                      f"‚Ä¢ `/addpb <@user> <montant>` ou `{PREFIX}addpb` - [ADMIN] Ajouter des PrissBucks",
                inline=False
            )
            
            # NOUVEAU: Commandes Banque Publique en premier pour la visibilit√©
            embed.add_field(
                name=f"{Emojis.PUBLIC_BANK} **üî• BANQUE PUBLIQUE - R√âVOLUTIONNAIRE ! üî•**",
                value=f"‚Ä¢ `/publicbank` ou `{PREFIX}publicbank` - Voir les fonds publics disponibles\n"
                      f"‚Ä¢ `/withdraw_public <montant>` ou `{PREFIX}withdraw_public` - Retirer jusqu'√† 1000 PB\n"
                      f"‚Ä¢ `{PREFIX}public_stats` - Statistiques de redistribution\n"
                      f"üèõÔ∏è **Aliment√©e par TOUTES les pertes casino !**\n"
                      f"ü§ù **Accessible √† TOUS - Syst√®me solidaire !**",
                inline=False
            )
            
            # Mini-jeux MODIFI√âS avec emphase sur la banque publique
            embed.add_field(
                name="üéÆ **Mini-jeux Solidaires - R√âVOLUTION !**",
                value=f"‚Ä¢ `/ppc <@adversaire> <mise>` - Pierre-Papier-Ciseaux solidaire\n"
                      f"‚Ä¢ `/roulette <pari> <mise>` - Roulette avec redistribution\n"
                      f"‚Ä¢ `{PREFIX}voler <@utilisateur>` - Vol classique (pas de changement)\n"
                      f"üèõÔ∏è **NOUVEAU:** √âgalit√©s PPC ‚Üí Banque publique\n"
                      f"üèõÔ∏è **NOUVEAU:** Pertes roulette ‚Üí Banque publique\n"
                      f"‚ôªÔ∏è **Plus de pertes inutiles !** Tout va √† la communaut√© !",
                inline=False
            )
            
            embed.set_footer(
                text=f"üî• BANQUE PUBLIQUE R√âVOLUTIONNAIRE ACTIV√âE ! üî• ‚Ä¢ Pr√©fixe: {PREFIX} ‚Ä¢ Slash: /"
            )
            embed.set_thumbnail(url=self.bot.user.display_avatar.url)
            
            await interaction.followup.send(embed=embed)
                
        except Exception as e:
            logger.error(f"Erreur help: {e}")
            await interaction.followup.send(f"**‚ùå Erreur dans l'aide**\n"
                                          f"Commandes r√©volutionnaires : `/publicbank`, `/withdraw_public`, `/ppc`, `/roulette`\n"
                                          f"üèõÔ∏è **LA BANQUE PUBLIQUE CHANGE TOUT !**",
                                          ephemeral=True)

    @commands.command(name='publicbank_help', aliases=['help_banque'])
    async def publicbank_help_cmd(self, ctx):
        """e!publicbank_help - Guide d√©taill√© de la banque publique"""
        embed = discord.Embed(
            title="üèõÔ∏è Guide Complet - Banque Publique",
            description="**R√âVOLUTION √âCONOMIQUE - Syst√®me de redistribution automatique !**",
            color=Colors.GOLD
        )
        
        embed.add_field(
            name="üî• Qu'est-ce que c'est ?",
            value="La **Banque Publique** est un syst√®me r√©volutionnaire qui r√©cup√®re TOUTES les pertes\n"
                  "des jeux de casino et les redistribue √©quitablement √† TOUS les joueurs du serveur !\n"
                  "ü§ù **Plus personne ne perd vraiment - nous perdons ensemble, nous gagnons ensemble !**",
            inline=False
        )
        
        embed.add_field(
            name="üí∞ Comment elle se remplit ?",
            value="üé∞ **Roulette:** Toutes les mises perdues\n"
                  "üéÆ **PPC:** Mises des √©galit√©s et abandons\n"
                  "üèõÔ∏è **Taxes casino:** Petite taxe sur les gros gains\n"
                  "üí∏ **Autres jeux:** Futurs mini-jeux avec pertes\n"
                  "‚ö° **Automatique:** Aucune intervention manuelle !",
            inline=True
        )
        
        embed.add_field(
            name="üéØ Comment retirer ?",
            value=f"‚Ä¢ `/publicbank` - Voir les fonds disponibles\n"
                  f"‚Ä¢ `/withdraw_public <montant>` - Retirer des PB\n"
                  f"‚Ä¢ **Min:** 50 PB par retrait\n"
                  f"‚Ä¢ **Max:** 1000 PB par retrait\n"
                  f"‚Ä¢ **Limite quotidienne:** 2000 PB/jour\n"
                  f"‚Ä¢ **Cooldown:** 30 minutes entre retraits",
            inline=True
        )
        
        embed.add_field(
            name="üìä Limites et r√®gles",
            value="üî∏ **√âquitable pour tous:** M√™mes limites pour chaque joueur\n"
                  "üî∏ **Anti-abus:** Cooldowns et limites quotidiennes\n"
                  "üî∏ **Transparence:** Statistiques publiques disponibles\n"
                  "üî∏ **Durabilit√©:** Syst√®me con√ßu pour durer ind√©finiment\n"
                  "üî∏ **Solidarit√©:** Plus de pertes inutiles !",
            inline=False
        )
        
        embed.add_field(
            name="üöÄ Exemples concrets",
            value="**Exemple 1:** Tu perds 500 PB √† la roulette ‚Üí 500 PB vont en banque publique\n"
                  "**Exemple 2:** √âgalit√© PPC avec 200 PB chacun ‚Üí 400 PB vont en banque publique\n"
                  "**Exemple 3:** Tu retires 800 PB de la banque ‚Üí Cooldown 30min, limite -800 PB aujourd'hui\n"
                  "**R√©sultat:** L'argent perdu circule dans la communaut√© au lieu de dispara√Ætre !",
            inline=False
        )
        
        embed.add_field(
            name="üí° Strat√©gies recommand√©es",
            value="üéØ **V√©rifie r√©guli√®rement:** `{PREFIX}publicbank` pour voir les fonds\n"
                  f"üí∞ **Retire intelligemment:** Montants adapt√©s √† tes besoins\n"
                  f"ü§ù **Joue solidaire:** Tes pertes aident les autres, leurs pertes t'aident\n"
                  f"üìà **Long terme:** Plus tu joues, plus la banque se remplit\n"
                  f"üèÜ **Gagnant-gagnant:** M√™me en perdant, tu contribues √† la communaut√©",
            inline=False
        )
        
        embed.add_field(
            name="üîÆ Impact r√©volutionnaire",
            value="Cette banque publique transforme compl√®tement l'√©conomie du serveur :\n"
                  "‚Ä¢ **Fini l'effet owner riche** - L'argent va vers les joueurs\n"
                  "‚Ä¢ **Syst√®me auto-r√©gul√©** - Plus on joue, plus on peut r√©cup√©rer\n"
                  "‚Ä¢ **Solidarit√© int√©gr√©e** - Personne n'est laiss√© pour compte\n"
                  "‚Ä¢ **Motivation preserved** - Le risque existe toujours, mais les pertes ont du sens",
            inline=False
        )
        
        embed.set_footer(text=f"üèõÔ∏è R√©volution √©conomique en marche ! Utilise {PREFIX}public_stats pour les statistiques")
        await ctx.send(embed=embed)

    @commands.command(name='taxes', aliases=['taxe', 'taxinfo'])
    async def tax_info_cmd(self, ctx):
        """e!taxes - Affiche les informations d√©taill√©es sur le syst√®me de taxes"""
        await self._execute_tax_info(ctx)

    @app_commands.command(name="taxes", description="Affiche les informations d√©taill√©es sur le syst√®me de taxes")
    async def tax_info_slash(self, interaction: discord.Interaction):
        """/taxes - Informations sur le syst√®me de taxes"""
        await interaction.response.defer()
        await self._execute_tax_info(interaction, is_slash=True)

    async def _execute_tax_info(self, ctx_or_interaction, is_slash=False):
        """Logique commune pour tax info"""
        if is_slash:
            send_func = ctx_or_interaction.followup.send
        else:
            send_func = ctx_or_interaction.send
            
        try:
            embed = discord.Embed(
                title=f"{Emojis.TAX} Syst√®me de Taxes + Banque Publique",
                description="Informations compl√®tes sur les taxes et la redistribution",
                color=Colors.WARNING
            )
            
            # Taxes sur les transferts
            embed.add_field(
                name="üí∏ **Transferts de PrissBucks**",
                value=f"‚Ä¢ **Taux:** {TRANSFER_TAX_RATE*100:.0f}% sur tous les `/give` et `{PREFIX}give`\n"
                      f"‚Ä¢ **Exemple:** Donner 100 ‚Üí Le receveur obtient {100-int(100*TRANSFER_TAX_RATE)}\n"
                      f"‚Ä¢ **Taxe collect√©e:** {int(100*TRANSFER_TAX_RATE)} PrissBucks vers le serveur\n"
                      f"‚Ä¢ **Co√ªt pour toi:** 100 PrissBucks (montant demand√©)",
                inline=False
            )
            
            # Taxes sur la boutique
            embed.add_field(
                name=f"{Emojis.SHOP} **Achats en Boutique**",
                value=f"‚Ä¢ **Taux:** {SHOP_TAX_RATE*100:.0f}% sur tous les achats `/buy` et `{PREFIX}buy`\n"
                      f"‚Ä¢ **Exemple:** Item √† 100 ‚Üí Tu paies {100+int(100*SHOP_TAX_RATE)} au total\n"
                      f"‚Ä¢ **Taxe collect√©e:** {int(100*SHOP_TAX_RATE)} PrissBucks vers le serveur\n"
                      f"‚Ä¢ **Affichage:** Prix avec taxe visible dans `/shop`",
                inline=False
            )
            
            # NOUVEAU: Banque publique
            embed.add_field(
                name="üèõÔ∏è **NOUVEAU: Banque Publique**",
                value="üî• **R√âVOLUTION:** Les pertes casino ne vont plus dans le vide !\n"
                      "‚Ä¢ **Pertes roulette** ‚Üí Banque publique\n"
                      "‚Ä¢ **√âgalit√©s PPC** ‚Üí Banque publique\n"
                      "‚Ä¢ **Abandons jeux** ‚Üí Banque publique\n"
                      "‚Ä¢ **Petites taxes gains** ‚Üí Banque publique\n"
                      "ü§ù **Tous les joueurs peuvent retirer ces fonds !**",
                inline=False
            )
            
            # Exemptions
            embed.add_field(
                name="‚úÖ **Activit√©s sans taxe**",
                value="‚Ä¢ **Daily rewards** - Aucune taxe\n"
                      "‚Ä¢ **R√©compenses de messages** - Aucune taxe\n"
                      "‚Ä¢ **Gains de mini-jeux** (victoires PPC, roulette) - Aucune taxe\n"
                      "‚Ä¢ **Ajouts admin** (`addpb`) - Aucune taxe\n"
                      "‚Ä¢ **Retraits banque publique** - Aucune taxe !",
                inline=False
            )
            
            # Calculs rapides MODIFI√âS
            embed.add_field(
                name="üßÆ **Calculateur rapide (avec banque publique)**",
                value=f"**Transferts:**\n"
                      f"‚Ä¢ Give 100 ‚Üí Re√ßoit {100-int(100*TRANSFER_TAX_RATE)} (taxe: {int(100*TRANSFER_TAX_RATE)})\n"
                      f"‚Ä¢ Give 200 ‚Üí Re√ßoit {200-int(200*TRANSFER_TAX_RATE)} (taxe: {int(200*TRANSFER_TAX_RATE)})\n\n"
                      f"**Shop:**\n"
                      f"‚Ä¢ Buy 100 ‚Üí Co√ªte {100+int(100*SHOP_TAX_RATE)} (taxe: {int(100*SHOP_TAX_RATE)})\n"
                      f"‚Ä¢ Buy 500 ‚Üí Co√ªte {500+int(500*SHOP_TAX_RATE)} (taxe: {int(500*SHOP_TAX_RATE)})\n\n"
                      f"**Casino ‚Üí Banque Publique:**\n"
                      f"‚Ä¢ Perds 300 roulette ‚Üí 300 PB en banque publique\n"
                      f"‚Ä¢ √âgalit√© PPC 150 ‚Üí 300 PB en banque publique",
                inline=False
            )
            
            embed.set_footer(text="Les taxes financent le serveur ‚Ä¢ Les pertes casino financent la communaut√© !")
            await send_func(embed=embed)
            
        except Exception as e:
            logger.error(f"Erreur taxes: {e}")
            embed = create_error_embed("Erreur", "Erreur lors de l'affichage des informations sur les taxes.")
            await send_func(embed=embed)

    @commands.command(name='ping')
    async def ping_cmd(self, ctx):
        """e!ping - Affiche la latence du bot et informations syst√®me"""
        await self._execute_ping(ctx)

    @app_commands.command(name="ping", description="Affiche la latence du bot et informations syst√®me")
    async def ping_slash(self, interaction: discord.Interaction):
        """/ping - Latence et infos syst√®me"""
        await interaction.response.defer()
        await self._execute_ping(interaction, is_slash=True)

    async def _execute_ping(self, ctx_or_interaction, is_slash=False):
        """Logique commune pour ping"""
        if is_slash:
            send_func = ctx_or_interaction.followup.send
        else:
            send_func = ctx_or_interaction.send
            
        try:
            latency = round(self.bot.latency * 1000)
            
            # Couleur selon la latence
            if latency < 100:
                color = Colors.SUCCESS
                status = "üü¢ Excellente"
            elif latency < 300:
                color = Colors.WARNING  
                status = "üü° Correcte"
            else:
                color = Colors.ERROR
                status = "üî¥ √âlev√©e"
            
            embed = discord.Embed(
                title="üèì Pong !",
                description=f"**Latence:** {latency}ms ({status})",
                color=color
            )
            
            # Statistiques du bot
            embed.add_field(name="ü§ñ Statut", value="En ligne ‚úÖ", inline=True)
            embed.add_field(name="üìä Serveurs", value=f"{len(self.bot.guilds)}", inline=True)
            
            # Slash commands
            slash_count = len(self.bot.tree.get_commands())
            embed.add_field(name="‚ö° Slash Commands", value=f"{slash_count}", inline=True)
            
            # Extensions charg√©es
            cogs_count = len(self.bot.extensions)
            embed.add_field(name="üîß Extensions", value=f"{cogs_count} charg√©es", inline=True)
            
            # Base de donn√©es
            db_status = "üü¢ Connect√©e" if hasattr(self.bot, 'database') and self.bot.database else "üî¥ D√©connect√©e"
            embed.add_field(name="üíæ Base de donn√©es", value=db_status, inline=True)
            
            # Syst√®me de taxes
            embed.add_field(name=f"{Emojis.TAX} Taxes", value=f"Transfer: {TRANSFER_TAX_RATE*100:.0f}% | Shop: {SHOP_TAX_RATE*100:.0f}%", inline=True)
            
            # NOUVEAU: Statut banque publique
            public_bank_cog = self.bot.get_cog('PublicBank')
            if public_bank_cog:
                try:
                    bank_info = await public_bank_cog.get_public_bank_balance()
                    bank_status = f"üèõÔ∏è {bank_info['balance']:,} PB"
                except:
                    bank_status = "üèõÔ∏è Active"
            else:
                bank_status = "üî¥ Inactive"
            
            embed.add_field(name="üèõÔ∏è Banque Publique", value=bank_status, inline=True)
            
            embed.set_footer(text=f"Bot d√©velopp√© avec discord.py ‚Ä¢ Pr√©fixe: {PREFIX} ‚Ä¢ Slash: / ‚Ä¢ üèõÔ∏è Banque Publique R√âVOLUTIONNAIRE")
            
            await send_func(embed=embed)
            
        except Exception as e:
            logger.error(f"Erreur ping: {e}")
            await send_func(f"üèì Pong ! Latence: {round(self.bot.latency * 1000)}ms\nüèõÔ∏è Banque Publique: R√©volution en cours !")

async def setup(bot):
    """Fonction appel√©e pour charger le cog"""
    await bot.add_cog(Help(bot))